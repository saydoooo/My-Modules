# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded from github.com
# ( o.o )  üîê Licensed under the CC BY-NC-ND 4.0.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name                                           : NewPostsNotifier
# Description                                    : –ú–æ–¥—É–ª—å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞—Ö –≤ –∫–∞–Ω–∞–ª–µ
# Author                                         : romaterabyte
# Commands                                       :
# .setchannel | .setfavorite
# ---------------------------------------------------------------------------------

import random

from telethon.sync import TelegramClient
from telethon.events import NewMessage
from telethon.tl.types import PeerChannel

from .. import loader, utils


@loader.tds
class NewPostsNotifierMod(loader.Module):
    strings = {"name": "–£–≤–µ–¥–æ–º–∏—Ç–µ–ª—å –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞—Ö"}

    def __init__(self):
        self.client = None
        self.channel_id = None
        self.favorite_chat_id = None

    async def client_ready(self, client, db):
        self.client = client

    async def on_message(self, event):
        if self.favorite_chat_id is not None:
            if event.is_channel and event.message.to_id.channel_id == self.channel_id:
                if event.message.post:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                    await self.client.send_message(self.favorite_chat_id, "–ù–æ–≤—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ!")

    async def setchannelcmd(self, m):
        """.setchannel <–∫–∞–Ω–∞–ª> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤"""
        args = utils.get_args_raw(m)
        if not args:
            await m.edit("<b>–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞!</b>")
            return

        try:
            self.channel_id = int(args)
        except ValueError:
            await m.edit("<b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞!</b>")
            return

        await m.edit(f"<b>–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:</b> {args}")

    async def setfavoritecmd(self, m):
        """.setfavorite <—á–∞—Ç> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞—Ö"""
        args = utils.get_args_raw(m)
        if not args:
            await m.edit("<b>–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ —á–∞—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!</b>")
            return

        try:
            self.favorite_chat_id = int(args)
        except ValueError:
            await m.edit("<b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–π–¥–∏ —á–∞—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!</b>")
            return

        await m.edit(f"<b>–ß–∞—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:</b> {args}")
